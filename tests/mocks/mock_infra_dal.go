// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/infra/dal.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "gitlab.com/emixam23/fizz-and-buzz/internal/domain/models"
	reflect "reflect"
)

// MockIDAL is a mock of IDAL interface
type MockIDAL struct {
	ctrl     *gomock.Controller
	recorder *MockIDALMockRecorder
}

// MockIDALMockRecorder is the mock recorder for MockIDAL
type MockIDALMockRecorder struct {
	mock *MockIDAL
}

// NewMockIDAL creates a new mock instance
func NewMockIDAL(ctrl *gomock.Controller) *MockIDAL {
	mock := &MockIDAL{ctrl: ctrl}
	mock.recorder = &MockIDALMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDAL) EXPECT() *MockIDALMockRecorder {
	return m.recorder
}

// RegisterFnbRequest mocks base method
func (m *MockIDAL) RegisterFnbRequest(n1 uint32, s1 string, n2 uint32, s2 string, limit uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterFnbRequest", n1, s1, n2, s2, limit)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterFnbRequest indicates an expected call of RegisterFnbRequest
func (mr *MockIDALMockRecorder) RegisterFnbRequest(n1, s1, n2, s2, limit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterFnbRequest", reflect.TypeOf((*MockIDAL)(nil).RegisterFnbRequest), n1, s1, n2, s2, limit)
}

// GetFnbRequestsHistory mocks base method
func (m *MockIDAL) GetFnbRequestsHistory(limit *uint64) ([]*models.FnbRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFnbRequestsHistory", limit)
	ret0, _ := ret[0].([]*models.FnbRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFnbRequestsHistory indicates an expected call of GetFnbRequestsHistory
func (mr *MockIDALMockRecorder) GetFnbRequestsHistory(limit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFnbRequestsHistory", reflect.TypeOf((*MockIDAL)(nil).GetFnbRequestsHistory), limit)
}

// GetFnbRequestsInputsStats mocks base method
func (m *MockIDAL) GetFnbRequestsInputsStats(sorted bool) ([]*models.FnbRequestInputStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFnbRequestsInputsStats", sorted)
	ret0, _ := ret[0].([]*models.FnbRequestInputStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFnbRequestsInputsStats indicates an expected call of GetFnbRequestsInputsStats
func (mr *MockIDALMockRecorder) GetFnbRequestsInputsStats(sorted interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFnbRequestsInputsStats", reflect.TypeOf((*MockIDAL)(nil).GetFnbRequestsInputsStats), sorted)
}

// GetFnbRequestsMostUsedCombination mocks base method
func (m *MockIDAL) GetFnbRequestsMostUsedCombination() (*models.FnbRequestInputStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFnbRequestsMostUsedCombination")
	ret0, _ := ret[0].(*models.FnbRequestInputStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFnbRequestsMostUsedCombination indicates an expected call of GetFnbRequestsMostUsedCombination
func (mr *MockIDALMockRecorder) GetFnbRequestsMostUsedCombination() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFnbRequestsMostUsedCombination", reflect.TypeOf((*MockIDAL)(nil).GetFnbRequestsMostUsedCombination))
}
